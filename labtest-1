import numpy as np

import matplotlib.pyplot as plt

from scipy import signal

traffic_data = np.random.randint(50, 150, size=1440)

noise = np.random.normal(0, 5, 1440)

traffic_noise_data = traffic_data + noise

b, a = signal.butter(3, 0.05)

traffic_smooth = signal.filtfilt(b, a, traffic_noise_data)

avg_hourly = np.mean(traffic_smooth.reshape(24, 60), axis=1)

x1 = np.arange(1440)

y1 = traffic_noise_data

plt.plot(x1,y1,label='Noisy Data', color = 'red', alpha = 0.5)

x2 = np.arange(1440)

y2 = traffic_smooth

plt.plot(x2,y2,label='Smooth Data', color = 'blue')

x3 = np.arange(0,1440,60)

y3 = avg_hourly

plt.plot(x3,y3,label='Averages', color='green')

plt.title('Traffic Data: Noisy, Smoothed, and Hourly Averages')

plt.xlabel('Time')

plt.ylabel('No. of Vehicles')

plt.legend()

plt.show()

def find_interval():

    intervals = []

    start = -1

    end = -1

    cnt = 0

    for i in range(1440):

        if traffic_smooth[i] >= 100:

            cnt += 1

            if cnt == 1:

                start = i

        else:

            if cnt >= 20:

                end = i

                intervals.append((start, end))

            cnt = 0

    return intervals

x1 = np.arange(1440)

y1 = traffic_smooth

plt.plot(x1,y1,label='Complete Interval', color = 'blue')

x3 = np.arange(1440)

y3 = np.random.randint(100,101,1440)

plt.plot(x3,y3)

intervals = find_interval()

for start, end in intervals:

    x2 = np.arange(start, end)

    y2 = traffic_smooth[start:end]

    plt.scatter(x2,y2,label='Selected Interval', color='red')

    plt.plot(x2,y2)

plt.show()
